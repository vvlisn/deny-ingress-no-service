rules:
  - apiGroups:
      - networking.k8s.io
    apiVersions:
      - v1
    resources:
      - ingresses
    operations:
      - CREATE
      - UPDATE
mutating: false
contextAware: true
contextAwareResources:
  - apiVersion: v1
    kind: Namespace
  - apiVersion: v1
    kind: Service
executionMode: kubewarden-wapc
# Consider the policy for the background audit scans. Default is true. Note the
# intrinsic limitations of the background audit feature on docs.kubewarden.io;
# If your policy hits any limitations, set to false for the audit feature to
# skip this policy and not generate false positives.
backgroundAudit: false
annotations:
  # artifacthub specific:
  io.artifacthub.displayName: Deny Ingress No Service
  io.artifacthub.resources: Ingress
  io.artifacthub.keywords: Ingress, service, security, network, kubewarden
  io.kubewarden.policy.ociUrl: ghcr.io/vvhuang-ll/deny-ingress-no-service
  # kubewarden specific:
  io.kubewarden.policy.title: deny-ingress-no-service
  io.kubewarden.policy.description: A policy that ensures Ingress resources only reference existing Services in Kubernetes clusters
  io.kubewarden.policy.author: "Kubewarden <kubewarden@kubewarden.io>"
  io.kubewarden.policy.url: https://github.com/vvhuang-ll/deny-ingress-no-service
  io.kubewarden.policy.source: https://github.com/vvhuang-ll/deny-ingress-no-service
  io.kubewarden.policy.license: Apache-2.0
  # The next two annotations are used in the policy report generated by the
  # Audit scanner. Severity indicates policy check result criticality and
  # Category indicates policy category. See more here at docs.kubewarden.io
  io.kubewarden.policy.severity: medium # one of info, low, medium, high, critical. See docs.
  io.kubewarden.policy.category: Network Security
